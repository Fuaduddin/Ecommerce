@{

    Layout = "~/Views/Shared/Layout/_FrontEndLayout.cshtml";

}
@model E_Commerce.Model.CustomerViewModel

    <!-- Login Page Start -->
    <section class="tab-version">
        <div class="container">
            <div class="form-title-details">
                <h2 class="login-title">Register</h2>
                <p class="login-short-details">
                    Lorem Ipsum is simply dummy text of the printing  and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s
                </p>
            </div>
            <div class="aboutstart">
                @using (Html.BeginForm("registration", "login", FormMethod.Post, new { enctype = "multipart/form-data", @class = "login" }))
                {
                    @Html.HiddenFor(Model => Model.Customer.CustomerId)
                    @Html.HiddenFor(Model => Model.user.UserType, new { @Value = "Customer", id = "usertype" })
                    <div class="login-input">
                        <label class="text-field"><b>Customer Name</b></label>
                        @Html.TextBoxFor(Model => Model.Customer.CustomerName, new { @class = "login-from-input form-control", @placeholder = "Enter Your Full Name" })
                        @Html.ValidationMessageFor(Model => Model.Customer.CustomerName)
                    </div>
                    <div class="login-input">
                        <label class="text-field"><b>Customer Phone Number</b></label>
                        @Html.TextBoxFor(Model => Model.Customer.CustomerPhoneNumber, new { @class = "login-from-input form-control", @placeholder = "Enter Your Phone Number" })
                        @Html.ValidationMessageFor(Model => Model.Customer.CustomerPhoneNumber)
                    </div>
                    <div class="mb-3">
                        <label class="text-field"><b>Customer Delivery Address</b></label>
                        @Html.TextAreaFor(Model => Model.Customer.CustomerAddress, new { @class = "form-control login-from-input text-input-form", @id = "exampleFormControlTextarea1", rows = "3", @placeholder = "Enter Your Address" })
                        @Html.ValidationMessageFor(Model => Model.Customer.CustomerAddress)
                    </div>
                    <div class="login-input">
                        <label class="text-field"><b>Delivery Zone</b></label>
                        @Html.DropDownListFor(Model => Model.Customer.CustomerZone, new SelectList(Model.viewzone, "Placeid", "PlaceName", "Select"), new { @class = "form-control", @id = "val-skill" })
                        @Html.ValidationMessageFor(Model => Model.Customer.CustomerZone, "", new { @class = "text-danger" })
                    </div>
                    <div class="login-input">
                        <label class="text-field"><b>Delivery Area</b></label>
                        <select name="districts" class="form-control" id="subcategory-items">
                            <option class="subcategory-item">Select Area</option>
                        </select>
                        @Html.HiddenFor(Model => Model.Customer.CustomerArea, new { @class = "form-control", type = "hidden", id = "deliverymanarea" })
                        @Html.ValidationMessageFor(Model => Model.Customer.CustomerArea)

                    </div>
                    <div class="login-input">
                        <label class="text-field"><b>Customer User Name</b></label>
                        @Html.TextBoxFor(Model => Model.user.UserName, new { @class = "login-from-input form-control", @placeholder = "Enter Your User Name" })
                        @Html.ValidationMessageFor(Model => Model.user.UserName)
                    </div>
                    <div class="login-input">
                        <label class="text-field"><b>Customer Password</b></label>
                        @Html.TextBoxFor(Model => Model.user.UserPassword, new { @class = "login-from-input form-control", @placeholder = "Enter Your password" })
                        @Html.ValidationMessageFor(Model => Model.user.UserPassword)
                    </div>
                    <div class="login-input">
                        <label class="text-field"><b>Confirmation Password</b></label>
                        <input class="login-from-input form-control" placeholder = "Enter Your Confirm password" name="confirmpass" required/>
                    </div>
                    <div class="social-button-details">
                        <button class="button-link facebook"><i class="fa fa-facebook"></i> Facebook</button>
                        <button class="button-link twitter"><i class="fa fa-twitter"></i> Twitter</button>
                    </div>

                    <div class="login-input">
                        @if (Model.Customer.CustomerId > 0)
                        {
                            <button class="button-link loginbutton" type="submit"><i></i> Update</button>
                        }
                        else
                        {
                            <button class="button-link loginbutton" type="submit"><i></i> Register</button>
                        }

                    </div>
                }
            </div>
        </div>
    </section>
    <section class="loginfromstart">
        <div class="container">
        </div>
        <div class=" login-form-details">

        </div>
        <!-- </div>
        </div>-->
    </section>
    <!-- Login Page End -->
    <script>
        $("#val-skill").change(function () {
            var categoryvalue = {
                zoneid: $("#val-skill").val()
            }
            $.ajax({
                url: "/login/GetSelectedArea",
                method: "Post",
                data: categoryvalue,
                success: function (data) {
                    $('.subcategory-item').empty();
                    var value = JSON.parse(data);
                    var i = 0;
                    $(function () {
                        $.each(value, function (i) {
                            var optionvalue = value[i];
                            $('#subcategory-items').append($('<option/>').attr("value", optionvalue.Placeid).text(optionvalue.PlaceName));
                            i++;
                        });
                    });
                }
            });
        });
    </script>

