
@model E_Commerce.Model.AdminViewModel

@{
    ViewBag.Title = "AddCategory";
    Layout = "~/Views/Shared/_SuperAdminLayout.cshtml";
    var i = 1;
}
<head>
    <script src="https://code.jquery.com/jquery-3.5.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.3/jquery.min.js" integrity="sha512-STof4xm1wgkfm7heWqFJVn58Hm3EtS31XFaagaa8VMReCXAkQnJZ+jEy8PCC/iT18dFy95WcExNHFTqLyp72eQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.1.1.min.js"></script>

</head>
<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <center>
                @using (Html.BeginForm("AddDeliveryCost", "DeliverySettings", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    <h1> ADD NEW Delivery Charge</h1>
                    <div>
                        @Html.HiddenFor(Model => Model.deliverycharge.DeliveryChargeid)
                        <div class="form-group row">
                            <label class="col-lg-4 col-form-label" for="val-username">
                                Delivery Cost Title <span class="text-danger">*</span>
                            </label>
                            <div class="col-lg-8">
                                @Html.TextBoxFor(Model => Model.deliverycharge.DeliveryChargeTitle, new { @class = "form-control", @placeholder = "Delivery Cost Title" })
                                @Html.ValidationMessageFor(Model => Model.deliverycharge.DeliveryChargeTitle)
                            </div>
                        </div>
                        @if (Model.deliverycharge.PreviousDeliveryChargeAmount > 0 && Model.deliverycharge.DeliveryChargeid > 0 && Model.deliverycharge.PreviousDeliveryChargeAmount != 0)
                        {
                            <div class="form-group row">
                                <label class="col-lg-4 col-form-label" for="val-username">
                                    Previous Delivery Cost  Amount <span class="text-danger">*</span>
                                </label>
                                <div class="col-lg-8">
                                    @Html.TextBoxFor(Model => Model.deliverycharge.PreviousDeliveryChargeAmount, new { @class = "form-control", ReadOnly = "true", value = @Model.deliverycharge.DeliveryChargeAmount })
                                </div>
                            </div>
                        }
                        <div class="form-group row">
                            <label class="col-lg-4 col-form-label" for="val-username">
                                Delivery Cost  Amount <span class="text-danger">*</span>
                            </label>
                            <div class="col-lg-8">
                                @Html.TextBoxFor(Model => Model.deliverycharge.DeliveryChargeAmount, new { @class = "form-control", @placeholder = "Delivery Cost  Amount " })
                                @Html.ValidationMessageFor(Model => Model.deliverycharge.DeliveryChargeAmount)
                            </div>
                        </div>
                        @if (Model.deliverycharge != null && Model.deliverycharge.DeliveryChargeid > 0)
                        {
                            <center>
                                <div class="form-group row">
                                    <div class="col-lg-8 add-btn">
                                        <input type="submit" value="Update" class="btn btn-light" />
                                    </div>
                                </div>
                            </center>
                        }
                        else
                        {

                            <center>
                                <div class="form-group row">
                                    <div class="col-lg-8 add-btn">
                                        <input type="submit" value="Add" class="btn btn-light" />
                                    </div>
                                </div>
                            </center>
                        }
                    </div>
                }
                @if (ViewData["Message"] != null)
                {
                    <h5 class="confirmationmessage" style="color:red">@ViewData["Message"]</h5>
                }
            </center>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Category List</h4>
                <div class="table-responsive">

                    <div id="deleteallbutton" style="display:none;">
                        <div class="">
                            <button type="submit" value="Add" class="btn btn-danger checkconfirmation"> Delete All </button>
                        </div>
                    </div>
                    <br />
                    <div class="mb-3" id="searchitem">
                        <div class="">
                            <select class="form-select" id="filteritem" aria-label="Default select example">
                                <option value="10" selected>10</option>
                                <option value="20">20</option>
                                <option value="30">30</option>
                                <option value="40">40</option>
                            </select>
                        </div>
                    </div>
                    @using (Html.BeginForm("Multiedelete", "DeliverySettings", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        <table class="table table-striped table-bordered zero-configuration" id="table">
                            <thead>
                                <tr>
                                    <th> <input type="checkbox" id="multiedelete"></th>
                                    <th>No</th>
                                    <th>Delivery Charge Name</th>
                                    <th>Delivery Charge Present Price</th>
                                    <th>Delivery Charge Previous Price</th>
                                    <th>Delete</th>
                                    <th>Update</th>

                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var deliverycharge in @Model.deliverychargeList)
                                {
                                    <tr class="hide-row">
                                        <td>
                                            <input type="checkbox" class="multiedeleteitem" name="multidelete" value="@deliverycharge.DeliveryChargeid">
                                        </td>
                                        <td>
                                            @i
                                        </td>
                                        <td>
                                            @deliverycharge.DeliveryChargeTitle
                                        </td>
                                        <td>
                                            @deliverycharge.DeliveryChargeAmount
                                        </td>
                                        <td>
                                            @if (deliverycharge.PreviousDeliveryChargeAmount > 0)
                                            {
                                                <h6><b><i>  @deliverycharge.PreviousDeliveryChargeAmount</i></b></h6>
                                            }
                                            else
                                            {
                                                <h6><b><i>Amount Was Not Change yet</i></b></h6>
                                            }

                                        </td>
                                        <td>
                                            <button onclick="showmodal(@deliverycharge.DeliveryChargeid)" type="button" class="btn btn-danger">Delete</button>
                                        </td>
                                        <td>
                                            @Html.ActionLink("Update", "GetSingleDeliveryChargeDeliveryCost", new { Id = deliverycharge.DeliveryChargeid }, new { title = "Edit Item", @class = "btn btn-success", @data_toggle = "tooltip", @data_placement = "top" })
                                        </td>
                                    </tr>
                                    i++;
                                }

                            </tbody>
                        </table>
                        <div id="id02" class="modal multideleteconfirmation" style="display: none;">
                            <span class="close" title="Close Modal">×</span>
                            <div class="container multideleteconfirmation-container">
                                <p>Are you sure you want to delete all the Delivery Charge?</p>

                                <div class="clearfix">
                                    <button type="button" id="close-CategoryDelete" , onclick="closemenu()" class="btn btn-danger">Cancel</button>
                                    <button type="submit" value="Delete" class="btn btn-success">Delete</button>
                                  
                                </div>
                            </div>
                        </div>
                    }
                    <div class="pagination-table-nav">
                        <nav aria-label="Page navigation example">
                            <ul class="pagination">
                                <li class="page-item"><a class="page-link" href="#">Previous</a></li>
                                @for (i = 1; i <= Model.totalpage; i++)
                                {
                                    <li class="page-item">
                                        <a class="page-link" onclick="showdata(@i)">@i</a>
                                    </li>
                                }
                                <li class="page-item"><a class="page-link" href="#">Next</a></li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="id01" class="modal">
    <span class="close" title="Close Modal">×</span>
    @using (Html.BeginForm("DeletedDeliveryCost", "DeliverySettings", FormMethod.Post, new { @class = "modal-content" }))
    {
        <div class="container">
            <h1>Delete Delivery Charge</h1>
            <p>Are you sure you want to delete this Delivery Charge?</p>
            <input type="hidden" name="id" id="categoryid" />
            <div class="clearfix">
                <button type="button" id="close-CategoryDelete" , onclick="closemenu()" class="btn btn-danger">Cancel</button>
                <button type="submit" value="Delete" class="btn btn-success">Delete</button>
            </div>
        </div>
    }
</div>
<!-- The Modal -->
<div id="myModal" class="modal">
    <!-- Modal content -->
    <div class="modal-content">
        <span class="close" onclick="close()">&times;</span>
        <div>
            <img src="https://www.adecco.co.uk/-/media/adeccogroup/brands/adecco-global-2016/uk/media/encirc-jobs/encirc-logo.png?rev=bdf96381cf1343b1b56e2aaa7cae7e0e&hash=56CF9110D3998955FE7FBFE9B4FB9D46" id="category-image" />
            <h5 id="category-name">xxxx</h5>
            <p id="category-details"></p>
        </div>
        <div>
            <ul>
                <li id="total-subcategory">

                </li>
                <li id="total-product">
                    Total product: 40
                </li>
            </ul>
        </div>
    </div>
</div>

<script>
    $(".checkconfirmation").click(function () {
        $(".multideleteconfirmation").toggle();
    });
    $("#searchitemcategory").keyup(function () {
        debugger
        var SearchKeyword = $("#searchitemcategory").val();
        var showdata =
        {
            SearchKeyword: SearchKeyword
        }
        if (SearchKeyword != null) {
            $.ajax({
                url: "/DeliverySettings/SearchDeliveryCharge",
                Method: "POST",
                data: showdata,
                success: function (data) {
                    $('.hide-row').css("display", "none");;
                    data = JSON.parse(data);
                    var serialno = 1;
                    var element = ""
                    var previousvalue;
                    $.each(data, function (i) {
                        if (data[i].PreviousDeliveryChargeAmount < 0) {
                            previousvalue = data[i].PreviousDeliveryChargeAmount;
                        }
                        else {
                            previousvalue = "Amount Was Not Change yet";
                        }
                        element += `
                <tr class="hide-row">
                     <td>
                        <input type="checkbox" class="multiedeleteitem" name="multidelete" value="${data[i].DeliveryChargeid}">
                    </td>
                     <td>
                        ${serialno}
                    </td>
                     <td>
                       ${data[i].DeliveryChargeTitle}
                    </td>
                    <td>
                        ${data[i].DeliveryChargeAmount}
                    </td>
                    <td>
                      <h6><b><i>${previousvalue}</i></b></h6>
                    </td>
                    <td>
                        <button id="open-CategoryDelete" data-toggle="modal" data-id="  ${data[i].DeliveryChargeid}" class="btn btn-danger">Delete</button>
                    </td>
                    <td>
                       <a class = "btn btn-success", data_toggle = "tooltip", data_placement = "top"  href="/SubCategory/GetSingleSubCategory/${data[i].DeliveryChargeid}">Update</a>
                       
                    </td>
                </tr>
                    `;
                        $("#table").append(element);
                        serialno++;
                        var element = "";
                    });
                },
                error: function () {
                    alert('Failed to receive the Data');
                    console.log('Failed ');
                }
            })
        }
        else {
            $('.hide-row').css("display", "block");;
        }

    });
    $(".multiedeleteitem").change(function () {
        debugger
        var j = 0;
        var check = $(".multiedeleteitem");
        var multiedelete = document.getElementsByClassName("multiedeleteitem");
        for (i = 0; i <= multiedelete.length; i++) {
            if (check.eq(i).is(':checked') == true) {
                j++;
            }
        }
        if (i > 0) {
            $("#deleteallbutton").css("display", "block");
        }
        else {
            $("#deleteallbutton").css("display", "none");
        }
    })
    $("#multiedelete").change(function () {
        var multiedelete = document.getElementsByClassName("multiedeleteitem");
        var multiedeleteischecked = $("#multiedelete");
        if (multiedeleteischecked.is(':checked') == true) {
            $("#deleteallbutton").css("display", "block");

            for (i = 0; i <= multiedelete.length; i++) {
                $(".multiedeleteitem").eq(i).attr('checked', true);
            }
        }
        else {
            $("#deleteallbutton").css("display", "none");
            for (i = 0; i <= multiedelete.length; i++) {
                $(".multiedeleteitem").eq(i).attr('checked', false);
            }
        }

    });
    var pageindex = 1;
    var pagesize = 10;
    function showdata(n) {
        //  var name = $("#sub-category-name").val();
        //  var oppotionvalue = $("#category-id").val();
        //  var oppotiontext = $("#category-id").text();
        pageindex = n;
        pagesize = $("")
        var showdata =
        {
            pageindex: pageindex,
            pagesize: pagesize
        }
        showdataview(showdata);
    }
    $("#filteritem").change(function () {
        // pageindex = n;
        pagesize = $("#filteritem").val();
        // pagesize = $("#searchitem").val()
        var showdata =
        {
            pageindex: pageindex,
            pagesize: pagesize
        }
        showdataview(showdata);
    });
    function showdataview(showdata) {
        $.ajax({
            url: "/DeliverySettings/Getpaginatiotabledata",
            Method: "POST",
            data: showdata,
            success: function (data) {
                var prevoiusvalue;
                $('.hide-row').empty();
                data = JSON.parse(data);
                var serialno = pagesize + 1;
                var element = ""
                $.each(data, function (i) {
                    if (data[i].PreviousDeliveryChargeAmount > 0) {
                        prevoiusvalue = data[i].PreviousDeliveryChargeAmount;
                    }
                    else {
                        prevoiusvalue = "Amount Was Not Change yet";
                    }
                    element += `
                <tr class="hide-row">
                     <td>
                        ${serialno}
                    </td>
             
                     <td>
                       ${data[i].DeliveryChargeTitle}
                    </td>
                    <td>
                        ${data[i].DeliveryChargeAmount}
                    </td>
                     <td>
                        </i></b>${prevoiusvalue}</h6>
                    </td>
                    <td>
                        <button id="open-CategoryDelete" data-toggle="modal" data-id="  ${data[i].DeliveryChargeid}" class="btn btn-danger">Delete</button>
                    </td>
                  
                </tr>
                    `;
                    $("#table").append(element);
                    serialno++;
                    var element = "";
                });
            },
            error: function () {
                alert('Failed to receive the Data');
                console.log('Failed ');
            }
        })
    }
</script>
<script>
    // Get the modal
    var modal = document.getElementById("myModal");

    // Get the button that opens the modal
    var btn = document.getElementById("myBtn");

    // Get the <span> element that closes the modal
    var span = document.getElementsByClassName("close")[0];

    // When the user clicks the button, open the modal
    //btn.onclick = function () {
    ///   modal.style.display = "block";
    //}

    $(document).ready(function () {
        $('span.close').click(function () {
            modal.style.display = "none";
        });
    });
    // When the user clicks on <span> (x), close the modal
    // span.onclick = function () {
    //   modal.style.display = "none";
    //  }

    // When the user clicks anywhere outside of the modal, close it
    window.onclick = function (event) {
        if (event.target == modal) {
            modal.style.display = "none";
        }
    }
</script>

<script>
    var pageindex = 1;
    var pagesize = 10;
    function showmodal(n)
    {
        document.getElementById('id01').style.display = 'block';
        $("#categoryid").val(n)
    }
    function closemenu()
    {
        $("#id01").hide();
    }
    function showdata(n) {
      //  var name = $("#sub-category-name").val();
      //  var oppotionvalue = $("#category-id").val();
      //  var oppotiontext = $("#category-id").text();
        pageindex = n;
        var showdata =
        {
            pageindex: pageindex,
            pagesize: pagesize
        }
        showdataview(showdata);
    }
    function showdataview(showdata) {
        $.ajax({
            url: "/Category/Getpaginatiotabledata",
            Method: "POST",
            data: showdata,
            success: function (data) {
                $('.hide-row').empty();
                data = JSON.parse(data);
                var serialno = pagesize + 1;
                var element=""
                $.each(data, function (i) {
                    element += `
                <tr class="hide-row">
                     <td>
                        ${serialno}
                    </td>
                     <td>
                       <img src="${data[i].CategoryImage}" width="100" height="100" alt="">
                    </td>
                     <td>
                       ${data[i].CategoryName}
                    </td>
                    <td>
                        ${data[i].CategoryDescription}
                    </td>
                    <td>
                        <button id="open-CategoryDelete" data-toggle="modal" data-id="  ${data[i].CategoryId}" class="btn btn-danger">Delete</button>
                    </td>
                    <td>
                        Html.ActionLink("Update", "GetSingleCategory", new { Id =  data[i].CategoryId }, new { title = "Edit Item", class = "btn btn-success", data_toggle = "tooltip", data_placement = "top" })
                    </td>
                     <td>
                      <button id="myBtn" class = "btn btn-success" onclick="finddata(${data[i].CategoryId})">Category Details</button>
                    </td>
                </tr>
                    `;
                    $("#table").append(element);
                    serialno++;
                    var element = "";
                });
            },
            error: function () {
                alert('Failed to receive the Data');
                console.log('Failed ');
            }
        })
    }
</script>


<style>
    .multideleteconfirmation-container {
        padding: 50px;
        text-align: center;
        background-color: white;
        width: 50%;
        height: 50%;
    }
    .inputfield {
        width: 100px;
        height: 100px;
    }

    .title-addproduct {
        text-align: center;
        margin-bottom: 3%;
        margin-top: 2%;
    }

    .form-validation {
        padding: 0% 5%;
    }

    input#Product_ProductName {
        padding: 1%;
        width: 100%;
    }

    input#Product_ProductPrice {
        padding: 1%;
        width: 100%;
    }

    .pagination-table-nav {
        display: flex;
        justify-content: center;
        align-items: center;
    }

    input#Product_TotalProduct {
        padding: 1%;
        width: 100%;
    }

    input.btn.btn-light {
        padding: 1% 12%;
        background-color: gainsboro;
        margin-left: 95%;
        margin-top: 5%;
    }

    input.btn.btn-light {
        padding: 8px 50px;
        background-color: slategrey;
        color: #fff;
        margin-left: 95%;
    }

    button:hover {
        opacity: 1;
    }

    /* Float cancel and delete buttons and add an equal width */
    .cancelbtn, .deletebtn {
        float: left;
        width: 50%;
    }

    /* Add a color to the cancel button */
    .cancelbtn {
        background-color: #ccc;
        color: black;
    }

    /* Add a color to the delete button */
    /* Add padding and center-align text to the container */
    .container {
        padding: 16px;
        text-align: center;
    }

    /* The Modal (background) */
    .modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 1; /* Sit on top */
        left: 0;
        top: 0;
        width: 90%; /* Full width */
        height: 90%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: #474e5d;
        padding-top: 50px;
        margin-left: 17%;
    }

    /* Modal Content/Box */
    .modal-content {
        background-color: #fefefe;
        margin: 5% auto 15% auto; /* 5% from the top, 15% from the bottom and centered */
        border: 1px solid #888;
        width: 80%; /* Could be more or less, depending on screen size */
    }

    /* Style the horizontal ruler */
    hr {
        border: 1px solid #f1f1f1;
        margin-bottom: 25px;
    }

    /* The Modal Close Button (x) */
    .close {
        position: absolute;
        right: 35px;
        top: 15px;
        font-size: 40px;
        font-weight: bold;
        color: #f1f1f1;
    }

        .close:hover,
        .close:focus {
            color: #f44336;
            cursor: pointer;
        }

    /* Clear floats */
    .clearfix::after {
        content: "";
        clear: both;
        display: table;
    }

    .modal-backdrop {
        position: fixed;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        z-index: 1040;
        background-color: transparent !important;
    }
</style>
<style>
    /* The Modal (background) */
    .modal {
        display: none;
        position: fixed;
        z-index: 1;
        padding-top: 100px;
        left: 0;
        top: 0;
        width: 90%;
        height: 100%;
        overflow: auto;
        background-color: rgb(0,0,0);
        background-color: rgba(0,0,0,0.4);
    }

    /* Modal Content */
    .modal-content {
        background-color: #fefefe;
        margin: auto;
        padding: 3% 3% 4% 2%;
        border: 1px solid #888;
        width: 80%;
        display: flex;
        justify-content: center;
        align-items: center;
        /* margin-left: 0%;*/
    }

    /* The Close Button */
    .close {
        color: #aaaaaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

        .close:hover,
        .close:focus {
            color: #000;
            text-decoration: none;
            cursor: pointer;
        }
</style>
